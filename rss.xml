<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IfcOpenShell Academy</title><link>https://academy.ifcopenshell.org/</link><description>Demo content and tutorials for IfcOpenShell</description><atom:link href="https://academy.ifcopenshell.org/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:thomas@aecgeeks.com"&gt;Thomas Krijnen&lt;/a&gt; </copyright><lastBuildDate>Tue, 23 Apr 2024 14:48:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using IfcOpenshell in Binder Notebooks with web-viewer and graph visualization</title><link>https://academy.ifcopenshell.org/posts/using-ifcopenshell-in-binder-notebook-with-viewer-and-graph/</link><dc:creator>Jakob Beetz </dc:creator><description>&lt;p&gt;As an early release (still a little rough around the edges), &lt;a href="https://github.com/jakob-beetz/ifcopenshell-notebooks"&gt;this repo&lt;/a&gt; has been created to allow students to get familiar with ifcopenshell without any knowledge. Its zero-setup running Jupyter-notebooks on binder.&lt;/p&gt;
&lt;p&gt;to launch now click this: &lt;a href="https://mybinder.org/v2/gh/jakob-beetz/ifcopenshell-binder/main?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Fjakob-beetz%252Fifcopenshell-notebooks%26urlpath%3Dlab%252Ftree%252Fifcopenshell-notebooks%252F00_introduction.ipynb%26branch%3Dmain"&gt;&lt;img alt="Binder" src="https://mybinder.org/badge_logo.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some of the &lt;strong&gt;features&lt;/strong&gt; are:
&lt;img alt="Interactive viewer" src="https://academy.ifcopenshell.org/images/screenshot-ifc-notebook.png"&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a viewer adapted from OCCJupyterViewer added with &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;two-directional-selection viewer &amp;lt;-&amp;gt; model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;section sliders for sections&lt;/li&gt;
&lt;li&gt;attribute value lister&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;set and get colors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;graph visualization of the scene graph
&lt;img alt="Graph viewer" src="https://academy.ifcopenshell.org/images/ifc-graph-plot.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;integrated IFC documentation 
&lt;img alt="Doc in help" src="https://academy.ifcopenshell.org/images/ifchelp-example-ifcdoor.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more examples, quizzes and task in the German version that is part of a mandatory 4th term class for 250 architecture students at the &lt;a href="https://dc.rwth-aachen.de/de"&gt;RWTH Aachen&lt;/a&gt; that will be migrated over time. 
We are very open and happy about suggestions, issues, PRs and feedback!&lt;/p&gt;
&lt;p&gt;TODOs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;more explantory text&lt;/li&gt;
&lt;li&gt;English verion of slides with &lt;a href="https://rise.readthedocs.io/en/stable/index.html"&gt;RISE&lt;/a&gt; to be used in lectures&lt;/li&gt;
&lt;li&gt;move viewer to SideCar (was not possible in the RWTH-Jupyter-Cluster yet)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will be applying for some more funding to extend this into a good Open Educational Resource (OER) book from provincial sources in NRW/Germany, very open for collaboration ... &lt;/p&gt;</description><category>binder</category><category>Jupyter</category><category>university</category><guid>https://academy.ifcopenshell.org/posts/using-ifcopenshell-in-binder-notebook-with-viewer-and-graph/</guid><pubDate>Sun, 17 Oct 2021 11:45:29 GMT</pubDate></item><item><title>Importing Part module in ifcOpenShell-python</title><link>https://academy.ifcopenshell.org/posts/Importing%20Part%20module%20in%20ifcOpenShell-python/</link><dc:creator>Devang Chauhan</dc:creator><description>&lt;div&gt;&lt;h2&gt;Importing Part module from FreeCAD in python&lt;/h2&gt;
&lt;p&gt;I was looking for a way to extract BREP (Boundary representation) from IFC and I stumbled
upon &lt;a href="https://pythoncvc.net/?p=839"&gt;this&lt;/a&gt; article. In the article, you'll see that
&lt;a href="https://www.linkedin.com/in/cyril-waechter-5a5b6180/"&gt;Cyril&lt;/a&gt; uses the Part
module of &lt;a href="https://www.freecadweb.org/index.php"&gt;FreeCAD&lt;/a&gt;.
This post shows you how you can import the Part module in Python.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.ifcopenshell.org/posts/Importing%20Part%20module%20in%20ifcOpenShell-python/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://academy.ifcopenshell.org/posts/Importing%20Part%20module%20in%20ifcOpenShell-python/</guid><pubDate>Mon, 11 Oct 2021 06:50:00 GMT</pubDate></item><item><title>Calculate Differences of IFC files with Hashing</title><link>https://academy.ifcopenshell.org/posts/calculate-differences-of-ifc-files-with-hashing/</link><dc:creator>Johan Luttun</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Purpose"&gt;Purpose&lt;a class="anchor-link" href="https://academy.ifcopenshell.org/posts/calculate-differences-of-ifc-files-with-hashing/#Purpose"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The goal of this tutorial is to learn how to asses whether 2 successively exported IFC building models are different by testing whether entity instances of the latest are present in the original one or entity instances of the original one are present in the latest version.&lt;/p&gt;
&lt;p&gt;The data is stored using the Industry Foundation Class (IFC) format, which is the standard format to digitally represent anything related to the construction industry. This format stands as an open-standard, and enables to share building models in form of IFC files between the different actors of a construction project. We can think of IFC as the PDF for the construction industry.&lt;/p&gt;
&lt;p&gt;For example, how could you find the difference between those 2 files?&lt;/p&gt;&lt;p&gt;&lt;a href="https://academy.ifcopenshell.org/posts/calculate-differences-of-ifc-files-with-hashing/"&gt;Read more…&lt;/a&gt; (15 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://academy.ifcopenshell.org/posts/calculate-differences-of-ifc-files-with-hashing/</guid><pubDate>Mon, 28 Sep 2020 12:56:00 GMT</pubDate></item><item><title>IfcOpenShell Optimizer tutorial</title><link>https://academy.ifcopenshell.org/posts/ifcopenshell-optimizer-tutorial/</link><dc:creator>Johan Luttun</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Purpose"&gt;Purpose&lt;a class="anchor-link" href="https://academy.ifcopenshell.org/posts/ifcopenshell-optimizer-tutorial/#Purpose"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The goal of this tutorial is to reduce the size of an IFC file. Indeed, IFC files can become rather large and processing them can lead to expensive computational costs. Most of the time, this important size is due to duplicate entity instances. In this tutorial, we're going to see how to create a newly optimized file which doesn't contain those instances.&lt;/p&gt;&lt;p&gt;&lt;a href="https://academy.ifcopenshell.org/posts/ifcopenshell-optimizer-tutorial/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://academy.ifcopenshell.org/posts/ifcopenshell-optimizer-tutorial/</guid><pubDate>Mon, 28 Sep 2020 12:56:00 GMT</pubDate></item><item><title>Understanding placements in IFC using IfcOpenShell and FreeCAD</title><link>https://academy.ifcopenshell.org/posts/understanding-placements-in-ifc-using-ifcopenshell-and-freecad/</link><dc:creator>Cyril Waechter</dc:creator><description>&lt;blockquote&gt;
&lt;h3&gt;IfcOpenShell – Placement&lt;/h3&gt;
&lt;p&gt;In previous article we used IfcOpenShell’s (IOS) to read an ifc geometry and convert it to a brep. When we read wikilab.ifc everything seemed to be at the right place but was it really ? When you use BIM in your project coordinates is always a subject to correctly discuss. In that matter I recommend...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://pythoncvc.net/?p=851"&gt;Continue reading on pythoncvc.net&lt;/a&gt;&lt;/p&gt;</description><category>FreeCAD</category><category>IfcOpenShell</category><category>python</category><guid>https://academy.ifcopenshell.org/posts/understanding-placements-in-ifc-using-ifcopenshell-and-freecad/</guid><pubDate>Tue, 13 Aug 2019 07:42:00 GMT</pubDate></item><item><title>Read geometry as Boundary Representation in FreeCAD</title><link>https://academy.ifcopenshell.org/posts/read-geometry-as-boundary-representation-in-freecad/</link><dc:creator>Cyril Waechter</dc:creator><description>&lt;blockquote&gt;
&lt;h3&gt;IfcOpenShell – Read geom as brep&lt;/h3&gt;
&lt;p&gt;IfcOpenShell version used : 0.6.0a1&lt;/p&gt;
&lt;p&gt;In previous article we used IfcOpenShell’s (IOS) standard settings to read an ifc geometry which was generating a mesh. To generate something else let’s take a look at available settings. If your IDE provide you a good auto-completion you are able to see what options you have but not their ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://pythoncvc.net/?p=839"&gt;Continue reading on pythoncvc.net&lt;/a&gt;&lt;/p&gt;</description><category>FreeCAD</category><category>IfcOpenShell</category><category>python</category><category>PythonOCC</category><guid>https://academy.ifcopenshell.org/posts/read-geometry-as-boundary-representation-in-freecad/</guid><pubDate>Thu, 01 Aug 2019 08:56:00 GMT</pubDate></item><item><title>Read IFC geometry as triangle meshes in FreeCAD</title><link>https://academy.ifcopenshell.org/posts/read-ifc-geometry-as-triangle-meshes-in-freecad/</link><dc:creator>Cyril Waechter</dc:creator><description>&lt;blockquote&gt;
&lt;h3&gt;IfcOpenShell – Read geom as mesh&lt;/h3&gt;
&lt;p&gt;IfcOpenShell is a library used to work with IFC schema. This library is licensed under LGPL 3.0 (libre and open source). Some features included : Parse ifc Create geom from ifc representation Display geom using pythonOCC Ifc importer for Blender Ifc importer for 3ds Max Convert geometry to many formats Some projects using IfcOpenShell...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://pythoncvc.net/?p=822"&gt;Continue reading on pythoncvc.net&lt;/a&gt;&lt;/p&gt;</description><category>FreeCAD</category><category>IfcOpenShell</category><category>python</category><guid>https://academy.ifcopenshell.org/posts/read-ifc-geometry-as-triangle-meshes-in-freecad/</guid><pubDate>Sun, 28 Jul 2019 07:00:00 GMT</pubDate></item><item><title>Using IfcOpenShell to parse IFC files with Python</title><link>https://academy.ifcopenshell.org/posts/using-ifcopenshell-to-parse-ifc-files-with-python/</link><dc:creator>Dion Moult</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;IFC is the ISO standard format for storing BIM data. IfcOpenShell is a project that has a Python library that allows you to parse IFC files...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://thinkmoult.com/using-ifcopenshell-parse-ifc-files-python.html"&gt;Continue reading on thinkmoult.com&lt;/a&gt;&lt;/p&gt;</description><guid>https://academy.ifcopenshell.org/posts/using-ifcopenshell-to-parse-ifc-files-with-python/</guid><pubDate>Tue, 12 Feb 2019 09:14:00 GMT</pubDate></item><item><title>Using IfcOpenShell and C++ to generate Alignments through the IFC 4x1 schema</title><link>https://academy.ifcopenshell.org/posts/using-ifcopenshell-and-c%2B%2B-to-generate-alignments-through-the-ifc-4x1-schema/</link><dc:creator>Francisco Navarrete Mandly</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;IfcOpenShell&lt;/em&gt; has an &lt;a href="https://github.com/IfcOpenShell/IfcOpenShell/tree/master/src/ifcexpressparser#readme"&gt;EXPRESS parser and code generator&lt;/a&gt; that generates code for the various IFC schemas. As part of the source code repository comes pre-generated code for the two widely used versions IFC2X3 and IFC4. But arbitrary schemas can be fed into the parser to provide support for other schemas at compile time. This post highlights the process of generating code for other schemas and talks about the recent developments within the IFC Alignment project._&lt;/p&gt;
&lt;p&gt;&lt;img alt="Illustration of an alignment as exchanged in IFC" src="https://academy.ifcopenshell.org/images/alignment.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.ifcopenshell.org/posts/using-ifcopenshell-and-c%2B%2B-to-generate-alignments-through-the-ifc-4x1-schema/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>EXPRESS</category><category>IfcOpenShell</category><guid>https://academy.ifcopenshell.org/posts/using-ifcopenshell-and-c%2B%2B-to-generate-alignments-through-the-ifc-4x1-schema/</guid><pubDate>Sun, 21 May 2017 08:03:00 GMT</pubDate></item><item><title>Creating a simple wall with property set and quantity information</title><link>https://academy.ifcopenshell.org/posts/creating-a-simple-wall-with-property-set-and-quantity-information/</link><dc:creator>Kianwee Chen</dc:creator><description>&lt;div&gt;&lt;p&gt;The following recipe creates a simple wall from scratch using a templating technique to quickly populate the entity instances for the IFC project structure. Simple extrusion geometries, an IfcPropertySet and an IfcElementQuantity are added using the procedural entity instance creation functions. The script is written for a research project with Dr. Patrick Janssen in National University of Singapore. The script takes reference from the FreeCAD IFC exporter script and &lt;a href="http://www.buildingsmart-tech.org/implementation/get-started/hello-world/example-1"&gt;HelloWall miniExample&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="HelloWall" src="https://academy.ifcopenshell.org/images/HelloWall.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.ifcopenshell.org/posts/creating-a-simple-wall-with-property-set-and-quantity-information/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://academy.ifcopenshell.org/posts/creating-a-simple-wall-with-property-set-and-quantity-information/</guid><pubDate>Sat, 25 Jul 2015 22:00:00 GMT</pubDate></item></channel></rss>